thorp's TODO's
==============
ligand interface (example script D120)

functions
=========
pymol
    get coordinates
        xyz = cmd.get_model('sele', 1).get_coord_list()
    show selected residues
        show spheres, sele (or res 52)
    import from pyrosetta
        http://www.pyrosetta.org/pymol_mover-tutorial
    ihome.cuhk.edu.hk ... pymol_tutorial.html
        color purple,ss h; color yellow,ss s; color green, ss ""
        mset 1 x120
        util.mroll 1,120 | util.mrock 1,120,180
        mplay
        mstop
http://jolecule.appspot.com/
    jump distances
- ac's?
- biopython?

algorithms
==========
Levenshtein automata: for string comparisonn, "nearness", to grade matches quickly
    http://blog.notdot.net/2010/07/Damn-Cool-Algorithms-Levenshtein-Automata
    http://en.wikipedia.org/wiki/Levenshtein_automaton
Vantange-point tree: for finding points close to a vantage point on a 'tree'
    http://en.wikipedia.org/wiki/Vantage-point_tree
finding nearby residues
    models of hydrogen-bonding, Dunbrack side-chain, Ramachandran backbone energies
        must have an intelligent way of quickly finding nearest atoms/residues in cartesian

optimizing
==========
http://docs.python.org/2/library/profile.html
centroid mode
